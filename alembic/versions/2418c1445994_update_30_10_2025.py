"""Update 30.10.2025

Revision ID: 2418c1445994
Revises: 500997343a6f
Create Date: 2025-10-30 14:34:00.080658

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2418c1445994'
down_revision: Union[str, None] = '500997343a6f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medical_cards',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('owner_cor_id', sa.String(length=36), nullable=False),
    sa.Column('card_color', sa.String(length=20), nullable=True),
    sa.Column('display_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_cor_id'], ['users.cor_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_cor_id')
    )
    op.create_index('idx_medical_card_owner', 'medical_cards', ['owner_cor_id'], unique=False)
    op.create_table('sibionics_auth',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('biz_id', sa.String(length=255), nullable=False),
    sa.Column('access_token', sa.String(length=500), nullable=True),
    sa.Column('expires_in', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('biz_id')
    )
    op.create_index('idx_sibionics_auth_biz_id', 'sibionics_auth', ['biz_id'], unique=False)
    op.create_index('idx_sibionics_auth_user_id', 'sibionics_auth', ['user_id'], unique=False)
    op.create_table('medical_card_access',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('medical_card_id', sa.String(length=36), nullable=False),
    sa.Column('user_cor_id', sa.String(length=36), nullable=False),
    sa.Column('access_level', sa.Enum('view', 'edit', 'share', name='medicalcardaccesslevel'), nullable=False),
    sa.Column('purpose', sa.Enum('relative', 'doctor', 'other', name='medicalcardpurpose'), nullable=True),
    sa.Column('purpose_note', sa.String(length=255), nullable=True),
    sa.Column('granted_by_cor_id', sa.String(length=36), nullable=True),
    sa.Column('granted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['granted_by_cor_id'], ['users.cor_id'], ),
    sa.ForeignKeyConstraint(['medical_card_id'], ['medical_cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_cor_id'], ['users.cor_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medical_card_id', 'user_cor_id', name='uq_card_user_access')
    )
    op.create_index('idx_medical_card_access_card', 'medical_card_access', ['medical_card_id'], unique=False)
    op.create_index('idx_medical_card_access_user', 'medical_card_access', ['user_cor_id'], unique=False)
    op.create_table('sibionics_devices',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('auth_id', sa.String(length=36), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('device_name', sa.String(length=255), nullable=True),
    sa.Column('bluetooth_num', sa.String(length=255), nullable=True),
    sa.Column('serial_no', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('current_index', sa.Integer(), nullable=True),
    sa.Column('max_index', sa.Integer(), nullable=True),
    sa.Column('min_index', sa.Integer(), nullable=True),
    sa.Column('data_gap', sa.Integer(), nullable=True),
    sa.Column('enable_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['auth_id'], ['sibionics_auth.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('auth_id', 'device_id', name='uq_auth_device')
    )
    op.create_index('idx_sibionics_device_auth_id', 'sibionics_devices', ['auth_id'], unique=False)
    op.create_index('idx_sibionics_device_device_id', 'sibionics_devices', ['device_id'], unique=False)
    op.create_table('sibionics_glucose',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('device_id', sa.String(length=36), nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('glucose_value', sa.Float(), nullable=False),
    sa.Column('trend', sa.Integer(), nullable=True),
    sa.Column('alarm_status', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['sibionics_devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id', 'index', name='uq_device_index')
    )
    op.create_index('idx_sibionics_glucose_device_id', 'sibionics_glucose', ['device_id'], unique=False)
    op.create_index('idx_sibionics_glucose_timestamp', 'sibionics_glucose', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_sibionics_glucose_timestamp', table_name='sibionics_glucose')
    op.drop_index('idx_sibionics_glucose_device_id', table_name='sibionics_glucose')
    op.drop_table('sibionics_glucose')
    op.drop_index('idx_sibionics_device_device_id', table_name='sibionics_devices')
    op.drop_index('idx_sibionics_device_auth_id', table_name='sibionics_devices')
    op.drop_table('sibionics_devices')
    op.drop_index('idx_medical_card_access_user', table_name='medical_card_access')
    op.drop_index('idx_medical_card_access_card', table_name='medical_card_access')
    op.drop_table('medical_card_access')
    op.drop_index('idx_sibionics_auth_user_id', table_name='sibionics_auth')
    op.drop_index('idx_sibionics_auth_biz_id', table_name='sibionics_auth')
    op.drop_table('sibionics_auth')
    op.drop_index('idx_medical_card_owner', table_name='medical_cards')
    op.drop_table('medical_cards')
    # ### end Alembic commands ###
