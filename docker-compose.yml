version: '3'

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    # image: massivecapybara/corid_api:latest
    ports:
      - "8000:8000"
    # volumes:
    #   - .:/app
    depends_on:
      - prometheus
      - postgres  
    env_file:
      - development.env
    logging: 
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: gunicorn main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --log-level info --error-logfile - --access-logfile -
  modbus_worker:
    build:
      context: . 
      dockerfile: Dockerfile.modbus_worker
    image: modbus-worker:latest 
    container_name: modbus_worker 
    env_file:
      - development.env 
    depends_on:
      - postgres 

    restart: unless-stopped 
  scanner_worker:
    build:
      context: .
      dockerfile: Dockerfile.scanner_worker
    restart: always
    container_name: scanner_worker
    volumes:
      - .:/app
    # network_mode: "host"
    env_file:
      - development.env
    depends_on:
      - postgres

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"


  postgres:
    image: postgres:latest
    env_file:
      - development.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    command: postgres -c max_connections=300

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes: 
      - grafana-storage:/var/lib/grafana
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    user: "0:0" 
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml 
      - ./:/app 
      - loki-data:/wal
      - compactor-data:/tmp/loki/compactor

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

volumes:
  postgres_data:
  grafana-storage:
  loki-data:
  compactor-data: