


from fastapi import APIRouter, Form
from PIL import Image, ImageDraw, ImageFont
from brother_ql.raster import BrotherQLRaster
from brother_ql.conversion import convert
from brother_ql.backends.network import send_over_network
import uuid

router = APIRouter()

PRINTER_IP = "192.168.154.154"  # IP  print server
PRINTER_MODEL = "QL-810W"
LABEL_TYPE = "62"  #  62 –º–º

@router.post("/print_code_label")
def print_label(content: str = Form(...)):
    try:
        print("üì¶ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—á–∞—Ç—å —Å —Ç–µ–∫—Å—Ç–æ–º:", content)

        # –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        img = Image.new("RGB", (696, 150), color="white")
        draw = ImageDraw.Draw(img)
        font = ImageFont.load_default()
        draw.text((10, 50), content, fill="black", font=font)
        print("üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        img_path = f"/tmp/label_debug_{uuid.uuid4().hex}.png"
        img.save(img_path)
        print(f"üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏: {img_path}")

        # –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        qlr = BrotherQLRaster(PRINTER_MODEL)
        qlr.exception_on_warning = True
        print("üñ®Ô∏è Raster –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        convert(
            qlr=qlr,
            images=[img],
            label=LABEL_TYPE,
            rotate="90",
            threshold=70.0,
            dither=False,
            compress=True,
            red=False,
            dpi_600=False,
            hq=True,
            cut=True
        )
        print("üîÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print(f"üìÑ –û–±—ä—ë–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (–±–∞–π—Ç): {len(qlr.data)}")

        # –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –ø–µ—á–∞—Ç—å
        print(f"üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –ø—Ä–∏–Ω—Ç–µ—Ä {PRINTER_IP}:9100 ...")
        send_over_network(qlr, host=PRINTER_IP, port=9100)
        print("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")

        return {"status": "success"}

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏:", str(e))
        return {"status": "error", "detail": str(e)}
